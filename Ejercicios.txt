Repasos en base a la logica 

A)Repaso de recursividad 
Fibonacci 3 ->(6)(1+2+3)  """ 4->(10)(1+2+3+4)
Factorial 3 ->(6)(1*2*3)  """ 4->(24)(1*2*3*4)




2)Repaso de accion
NO PERMITIDO
+
PERMITIDOS
--
++
-

a)sumar dos numeros sin usar el operador de suma de por lo menos 2 formas(Carga Dinamica)	

b)Determinar si dos numeros son iguales sin operadores de comparacion o de suma aplicados a los mismos elementos
si podemos realizar el uso indirecto (siempre y cuando no comparemos algo usando el stack )


	



--------------------

1)Ejercicios de entrevista

  /*
    
    Given an integer n, return a string Collecion answer (1-indexed) where:
    answer[i] == "FizzBuzz" if i is divisible by 3 and 5.
    answer[i] == "Fizz" if i is divisible by 3.
    answer[i] == "Buzz" if i is divisible by 5.
    answer[i] == i (as a string) if none of the above conditions are true.
    
    
    Input: n = 3
    Output: ["1","2","Fizz"]
    
    Input: n = 5
    Output: ["1","2","Fizz","4","Buzz"]
    */

String.valueOf(valor)
    /*
    
    Given two strings s and t, return true if t is an anagram of s, and false otherwise.

    An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.
    
    Input: s = "anagram", t = "nagaram"
    Output: true
    
    Input: s = "rat", t = "tar"
    Output: true
    

    Input: s = "rat", t = "tar"
    Output: true
    
    
    */

Ampliados

1)

DEJAR EL JUEGO CON RANDOM 
Tenemos un juego de cartas donde en cada una tenemos un numero en una cara y una letra en la opuesta 
La idea es que cada persona saca una carta por turno (vamos a tener dos jugadores)
(los numeros van de 0 a 100)
La modalidad es la siguiente ,
saca carta jugador uno, luego jugador dos 
Gana el jugador que tenga la carta mas alta
CONDICION
La tirada debe repetirse en caso de que ambas personas saquen carta con vocal


2)Generar un programa que reciba la carga de un numero , luego de eso debemos generar una matriz cargada con azul y rojo
CONDICION
SOLO PODEMOS TENER UNA FILA Y UNA COLUMNA CON IGUALDAD DE CONDICION DE COLORES



String[][] nombre=new String[i][j]

i=numero filas
j=numero columnas

nombre[i][j]









